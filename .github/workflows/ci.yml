name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: beksultan
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: mydb
        options: >-
          --health-cmd "pg_isready -U beksultan"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports: ["6379:6379"]

    steps:
      - name: üîÑ –†–µ–ø–æ–Ω—ã –∂“Ø–∫—Ç–µ—É
        uses: actions/checkout@v3

      - name: üêç Python –æ—Ä–Ω–∞—Ç—É
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: üì¶ –¢”ô—É–µ–ª–¥—ñ–ª—ñ–∫—Ç–µ—Ä–¥—ñ –æ—Ä–Ω–∞—Ç—É
        run: |
          pip install -r note_api/requirements.txt
          pip install pytest

      - name: üß™ –¢–µ—Å—Ç—Ç–µ—Ä–¥—ñ —ñ—Å–∫–µ “õ–æ—Å—É
        env:
          DATABASE_URL: postgresql+asyncpg://beksultan:admin@localhost/mydb
          SECRET_KEY: supersecret
          CELERY_BROKER_URL: redis://localhost:6379/0
          CELERY_RESULT_BACKEND: redis://localhost:6379/0
        run: |
          pytest note_api/tests/

      - name: üê≥ Docker –æ–±—Ä–∞–∑—ã–Ω –∂–∞—Å–∞—É
        run: |
          docker build -t myapp:latest note_api/
